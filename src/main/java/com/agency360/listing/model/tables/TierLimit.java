/*
 * This file is generated by jOOQ.
 */
package com.agency360.listing.model.tables;


import com.agency360.listing.model.Keys;
import com.agency360.listing.model.Public;
import com.agency360.listing.model.tables.records.TierLimitRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TierLimit extends TableImpl<TierLimitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tier_limit</code>
     */
    public static final TierLimit TIER_LIMIT = new TierLimit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TierLimitRecord> getRecordType() {
        return TierLimitRecord.class;
    }

    /**
     * The column <code>public.tier_limit.id</code>.
     */
    public final TableField<TierLimitRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.tier_limit.dealer_id</code>.
     */
    public final TableField<TierLimitRecord, Integer> DEALER_ID = createField(DSL.name("dealer_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.tier_limit.listing_limit</code>.
     */
    public final TableField<TierLimitRecord, Integer> LISTING_LIMIT = createField(DSL.name("listing_limit"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.tier_limit.who_done</code>.
     */
    public final TableField<TierLimitRecord, String> WHO_DONE = createField(DSL.name("who_done"), SQLDataType.VARCHAR(132).nullable(false).defaultValue(DSL.field("\"current_user\"()", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.tier_limit.when_done</code>.
     */
    public final TableField<TierLimitRecord, LocalDateTime> WHEN_DONE = createField(DSL.name("when_done"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "");

    private TierLimit(Name alias, Table<TierLimitRecord> aliased) {
        this(alias, aliased, null);
    }

    private TierLimit(Name alias, Table<TierLimitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tier_limit</code> table reference
     */
    public TierLimit(String alias) {
        this(DSL.name(alias), TIER_LIMIT);
    }

    /**
     * Create an aliased <code>public.tier_limit</code> table reference
     */
    public TierLimit(Name alias) {
        this(alias, TIER_LIMIT);
    }

    /**
     * Create a <code>public.tier_limit</code> table reference
     */
    public TierLimit() {
        this(DSL.name("tier_limit"), null);
    }

    public <O extends Record> TierLimit(Table<O> child, ForeignKey<O, TierLimitRecord> key) {
        super(child, key, TIER_LIMIT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<TierLimitRecord, Integer> getIdentity() {
        return (Identity<TierLimitRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TierLimitRecord> getPrimaryKey() {
        return Keys.TIER_LIMIT_PK;
    }

    @Override
    public List<ForeignKey<TierLimitRecord, ?>> getReferences() {
        return Arrays.asList(Keys.TIER_LIMIT__TIER_LIMIT_FK);
    }

    private transient Dealer _dealer;

    /**
     * Get the implicit join path to the <code>public.dealer</code> table.
     */
    public Dealer dealer() {
        if (_dealer == null)
            _dealer = new Dealer(this, Keys.TIER_LIMIT__TIER_LIMIT_FK);

        return _dealer;
    }

    @Override
    public TierLimit as(String alias) {
        return new TierLimit(DSL.name(alias), this);
    }

    @Override
    public TierLimit as(Name alias) {
        return new TierLimit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TierLimit rename(String name) {
        return new TierLimit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TierLimit rename(Name name) {
        return new TierLimit(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
